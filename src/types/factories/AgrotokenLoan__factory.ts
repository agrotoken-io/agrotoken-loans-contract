/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AgrotokenLoan, AgrotokenLoanInterface } from "../AgrotokenLoan";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "loanHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "collateral",
        type: "address",
      },
    ],
    name: "LoanCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "collateralName",
        type: "string",
      },
      {
        internalType: "address",
        name: "beneficiary_",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "dueIn_",
        type: "uint24",
      },
      {
        internalType: "uint8",
        name: "interest_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "fiatTotal_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenTotal_",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "localCurrency_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "liquidationLimitPercentage_",
        type: "uint8",
      },
    ],
    name: "createLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "loans",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "tokenAlias",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611878806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b0b22c2c1161005b578063b0b22c2c146100d8578063e1ec3c68146100f4578063e744092e14610124578063f851a440146101545761007d565b806302a5b6131461008257806318a3d79e1461009e5780638129fc1c146100ce575b600080fd5b61009c60048036038101906100979190610e14565b610172565b005b6100b860048036038101906100b39190610f16565b6106d3565b6040516100c591906111e0565b60405180910390f35b6100d661071c565b005b6100f260048036038101906100ed9190610f5f565b6108a2565b005b61010e60048036038101906101099190610fbb565b610b18565b60405161011b9190611216565b60405180910390f35b61013e60048036038101906101399190610de7565b610b3c565b60405161014b91906111fb565b60405180910390f35b61015c610b5c565b60405161016991906111e0565b60405180910390f35b6001600060028a60405161018691906111c9565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661023c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023390611321565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156102ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a3906112e1565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16141561031b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610312906112a1565b60405180910390fd5b6000841415801561032d575060008314155b801561033f575060008662ffffff1614155b61037e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037590611261565b60405180910390fd5b60008290506000815114156103c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90611361565b60405180910390fd5b600060028a6040516103da91906111c9565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905033600460008d815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360008d815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555088600560008d815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087600660008d815260200190815260200160002060006101000a81548162ffffff021916908362ffffff16021790555086600760008d815260200190815260200160002060006101000a81548160ff021916908360ff16021790555085600860008d81526020019081526020016000208190555083600960008d8152602001908152602001600020908051906020019061059c929190610c6b565b5084600b60008d81526020019081526020016000208190555082600a60008d815260200190815260200160002060006101000a81548160ff021916908360ff1602179055506001600c60008d815260200190815260200160002060006101000a81548160ff021916908360098111156106185761061761153a565b5b021790555042600d60008d815260200190815260200160002081905550600f8b90806001815401808255809150506001900390600052602060002001600090919091909150558873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff168c7fdc09f79b6dab884ec5d08b09662cd5f77875798cccb0966f226a66579527406688856040516106be929190611381565b60405180910390a45050505050505050505050565b6002818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900460ff166107445760008054906101000a900460ff161561074d565b61074c610b82565b5b61078c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610783906112c1565b60405180910390fd5b60008060019054906101000a900460ff1615905080156107dc576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b33600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061087e6040518060400160405280601781526020017f4465706c6f79696e67204167726f746f6b656e4c6f616e000000000000000000815250600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610b93565b801561089f5760008060016101000a81548160ff0219169083151502179055505b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610912576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090990611341565b60405180910390fd5b600082905060008151141561095c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095390611281565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16158015610a205750600073ffffffffffffffffffffffffffffffffffffffff166002846040516109d991906111c9565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b610a5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5690611301565b60405180910390fd5b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555081600284604051610ac791906111c9565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600f8181548110610b2857600080fd5b906000526020600020016000915090505481565b60016020528060005260406000206000915054906101000a900460ff1681565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610b8d30610c2f565b15905090565b610c2b8282604051602401610ba9929190611231565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c42565b5050565b600080823b905060008111915050919050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b828054610c77906114d7565b90600052602060002090601f016020900481019282610c995760008555610ce0565b82601f10610cb257805160ff1916838001178555610ce0565b82800160010185558215610ce0579182015b82811115610cdf578251825591602001919060010190610cc4565b5b509050610ced9190610cf1565b5090565b5b80821115610d0a576000816000905550600101610cf2565b5090565b6000610d21610d1c846113cf565b6113aa565b905082815260208101848484011115610d3d57610d3c6115cc565b5b610d48848285611495565b509392505050565b600081359050610d5f816117cf565b92915050565b600081359050610d74816117e6565b92915050565b600082601f830112610d8f57610d8e6115c7565b5b8135610d9f848260208601610d0e565b91505092915050565b600081359050610db7816117fd565b92915050565b600081359050610dcc81611814565b92915050565b600081359050610de18161182b565b92915050565b600060208284031215610dfd57610dfc6115d6565b5b6000610e0b84828501610d50565b91505092915050565b60008060008060008060008060006101208a8c031215610e3757610e366115d6565b5b6000610e458c828d01610d65565b99505060208a013567ffffffffffffffff811115610e6657610e656115d1565b5b610e728c828d01610d7a565b9850506040610e838c828d01610d50565b9750506060610e948c828d01610da8565b9650506080610ea58c828d01610dd2565b95505060a0610eb68c828d01610dbd565b94505060c0610ec78c828d01610dbd565b93505060e08a013567ffffffffffffffff811115610ee857610ee76115d1565b5b610ef48c828d01610d7a565b925050610100610f068c828d01610dd2565b9150509295985092959850929598565b600060208284031215610f2c57610f2b6115d6565b5b600082013567ffffffffffffffff811115610f4a57610f496115d1565b5b610f5684828501610d7a565b91505092915050565b60008060408385031215610f7657610f756115d6565b5b600083013567ffffffffffffffff811115610f9457610f936115d1565b5b610fa085828601610d7a565b9250506020610fb185828601610d50565b9150509250929050565b600060208284031215610fd157610fd06115d6565b5b6000610fdf84828501610dbd565b91505092915050565b610ff181611427565b82525050565b61100081611439565b82525050565b61100f81611445565b82525050565b600061102082611400565b61102a818561140b565b935061103a8185602086016114a4565b611043816115db565b840191505092915050565b600061105982611400565b611063818561141c565b93506110738185602086016114a4565b80840191505092915050565b600061108c60168361140b565b9150611097826115ec565b602082019050919050565b60006110af60128361140b565b91506110ba82611615565b602082019050919050565b60006110d260168361140b565b91506110dd8261163e565b602082019050919050565b60006110f5602e8361140b565b915061110082611667565b604082019050919050565b600061111860228361140b565b9150611123826116b6565b604082019050919050565b600061113b60138361140b565b915061114682611705565b602082019050919050565b600061115e60118361140b565b91506111698261172e565b602082019050919050565b600061118160248361140b565b915061118c82611757565b604082019050919050565b60006111a460168361140b565b91506111af826117a6565b602082019050919050565b6111c38161147e565b82525050565b60006111d5828461104e565b915081905092915050565b60006020820190506111f56000830184610fe8565b92915050565b60006020820190506112106000830184610ff7565b92915050565b600060208201905061122b6000830184611006565b92915050565b6000604082019050818103600083015261124b8185611015565b905061125a6020830184610fe8565b9392505050565b6000602082019050818103600083015261127a8161107f565b9050919050565b6000602082019050818103600083015261129a816110a2565b9050919050565b600060208201905081810360008301526112ba816110c5565b9050919050565b600060208201905081810360008301526112da816110e8565b9050919050565b600060208201905081810360008301526112fa8161110b565b9050919050565b6000602082019050818103600083015261131a8161112e565b9050919050565b6000602082019050818103600083015261133a81611151565b9050919050565b6000602082019050818103600083015261135a81611174565b9050919050565b6000602082019050818103600083015261137a81611197565b9050919050565b600060408201905061139660008301856111ba565b6113a36020830184610fe8565b9392505050565b60006113b46113c5565b90506113c08282611509565b919050565b6000604051905090565b600067ffffffffffffffff8211156113ea576113e9611598565b5b6113f3826115db565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006114328261144f565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156114c25780820151818401526020810190506114a7565b838111156114d1576000848401525b50505050565b600060028204905060018216806114ef57607f821691505b6020821081141561150357611502611569565b5b50919050565b611512826115db565b810181811067ffffffffffffffff8211171561153157611530611598565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f416d6f756e74732063616e6e6f74206265207a65726f00000000000000000000600082015250565b7f496e76616c696420746f6b656e206e616d650000000000000000000000000000600082015250565b7f42656e656669636961727920697320696e76616c696400000000000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f42656e65666963696172792063616e6e6f74206265207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e20616c726561647920616464656400000000000000000000000000600082015250565b7f546f6b656e206e6f7420616c6c6f776564000000000000000000000000000000600082015250565b7f546f6b656e20616464726573732063616e6e6f74206265207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c6964206c6f63616c2063757272656e637900000000000000000000600082015250565b6117d881611427565b81146117e357600080fd5b50565b6117ef81611445565b81146117fa57600080fd5b50565b6118068161146f565b811461181157600080fd5b50565b61181d8161147e565b811461182857600080fd5b50565b61183481611488565b811461183f57600080fd5b5056fea2646970667358221220b4b1e8c6f04cd548d20d4ce1bee98d25691eb5a286cdc74b60d89aa0f763a06164736f6c63430008070033";

type AgrotokenLoanConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AgrotokenLoanConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AgrotokenLoan__factory extends ContractFactory {
  constructor(...args: AgrotokenLoanConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AgrotokenLoan> {
    return super.deploy(overrides || {}) as Promise<AgrotokenLoan>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AgrotokenLoan {
    return super.attach(address) as AgrotokenLoan;
  }
  connect(signer: Signer): AgrotokenLoan__factory {
    return super.connect(signer) as AgrotokenLoan__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AgrotokenLoanInterface {
    return new utils.Interface(_abi) as AgrotokenLoanInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AgrotokenLoan {
    return new Contract(address, _abi, signerOrProvider) as AgrotokenLoan;
  }
}
