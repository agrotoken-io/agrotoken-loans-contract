/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AgrotokenLoanInterests,
  AgrotokenLoanInterestsInterface,
} from "../AgrotokenLoanInterests";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x703d57fa",
        type: "bytes32",
      },
    ],
    name: "c_0x703d57fa",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060dc8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80630d2b24ec14602d575b600080fd5b60436004803603810190603f9190605b565b6045565b005b50565b6000813590506055816092565b92915050565b600060208284031215606e57606d608d565b5b6000607a848285016048565b91505092915050565b6000819050919050565b600080fd5b6099816083565b811460a357600080fd5b5056fea2646970667358221220bfa2529e877952552baf5cb695094ef895c28d78302dea9803efb2b8b24b141d64736f6c63430008070033";

type AgrotokenLoanInterestsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AgrotokenLoanInterestsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AgrotokenLoanInterests__factory extends ContractFactory {
  constructor(...args: AgrotokenLoanInterestsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AgrotokenLoanInterests> {
    return super.deploy(overrides || {}) as Promise<AgrotokenLoanInterests>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AgrotokenLoanInterests {
    return super.attach(address) as AgrotokenLoanInterests;
  }
  connect(signer: Signer): AgrotokenLoanInterests__factory {
    return super.connect(signer) as AgrotokenLoanInterests__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AgrotokenLoanInterestsInterface {
    return new utils.Interface(_abi) as AgrotokenLoanInterestsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AgrotokenLoanInterests {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AgrotokenLoanInterests;
  }
}
